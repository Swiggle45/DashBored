{"version":3,"sources":["webpack:///./src/App.jsx","webpack:///./src/landing.jsx","webpack:///./src/components/Header.jsx","webpack:///./src/results.jsx"],"names":["contentNode","document","getElementById","NoMatch","RoutedApp","hashHistory","Landing","Results","ReactDOM","render","React","Component","Header","state","price","distance","numberOfPeople","activityLvl","setState","activity","ResultsTable","props","places","filteredData","createPlace","bind","setFilter","loadData","prevProps","fetch","then","response","ok","json","console","log","data","_metadata","total_count","records","alert","error","message","catch","err","newPlace","method","headers","body","JSON","stringify","res","newPlaces","concat","updatedPlace","query","router","push","pathname","location","priceVar","distanceVar","parseInt","distVar","numberOfPeopleVar","peopleVar","activityLvlVar","activityVar","filter","rows","map","name","borderedStyle","border","padding","LocationRow","priceEval","distEval","peopleEval","activityEval","Filters","changeDist","value","dist","changePrice","changePeople","people","changeActivity","AddPlace","handleSubmit","e","preventDefault","form","forms","placeAdd"],"mappings":"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","file":"static/app.bundle.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Router, Route, Redirect, hashHistory, withRouter } from 'react-router';\r\n\r\n\r\nimport Landing from './landing.jsx';\r\nimport Results from './results.jsx';\r\n\r\nvar contentNode = document.getElementById(\"contents\");\r\n\r\n const NoMatch = () => <p>Page Not Found</p>;\r\n const RoutedApp = () => (\r\n   <Router history={hashHistory} >\r\n     <Redirect from=\"/\" to=\"/places\" />\r\n     <Route path=\"/places\" component={withRouter(Landing)} />\r\n     <Route path=\"/results\" component={withRouter(Results)} />\r\n     <Route path=\"*\" component={NoMatch} />\r\n   </Router>);\r\n\r\nReactDOM.render(<RoutedApp />, contentNode);\n\n\n// WEBPACK FOOTER //\n// ./src/App.jsx","import React from 'react';\r\nimport {Link} from 'react-router';\r\nimport Header from './components/Header.jsx';\r\n// This grabs the DOM element to be used to mount React components.\r\n\r\nexport default class Landing extends React.Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"contents\">\r\n      <Header/>\r\n        <main>\r\n          <p>\r\n            Welcome to OverBored! Use this application to figure out what to do with your friends instead of sitting around being bored. Filter activities based on price, activity level, number of people, and how far away you're willing to travel. Have fun!\r\n          </p>\r\n            <Link to=\"/results\">Start your search!</Link>\r\n      </main>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/landing.jsx","import React from 'react';\r\nimport {Link} from 'react-router';\r\n\r\nexport default class Header extends React.Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <header>\r\n          <h1>\r\n              <Link to=\"/places\">OverBored</Link>\r\n          </h1>\r\n        </header>\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Header.jsx","import React from 'react';\r\nimport 'isomorphic-fetch';\r\nimport Header from './components/Header.jsx'\r\n\r\n\r\n// This grabs the DOM element to be used to mount React components.\r\nexport default class Results extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            price: 3,\r\n            distance: 25,\r\n            numberOfPeople: 11,\r\n            activityLvl: 3\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"results\">\r\n                <Header/>\r\n            <main>\r\n                <div>\r\n                    <div id=\"main\">\r\n                        <div id=\"table\">\r\n                            <ResultsTable priceVar={this.state.price}\r\n                                          distVar={this.state.distance}\r\n                                          peopleVar={this.state.numberOfPeople}\r\n                                          activityVar={this.state.activityLvl} />\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"line\"></div>\r\n                    <div id=\"sidebar\">\r\n                        <Filters price={this.state.price} changePrice={(price) => this.setState({ price: price })}\r\n                                 dist={this.state.distance} changeDist={(distance) => this.setState({ distance: distance })}\r\n                                 people={this.state.numberOfPeople} changePeople={(numberOfPeople) => this.setState({ numberOfPeople: numberOfPeople })}\r\n                                 activity={this.state.activityLvl} changeActivity={(activity) => this.setState({ activityLvl: activity })} />\r\n                    </div>\r\n                    <div id=\"sliders\">\r\n\r\n                    </div>\r\n                </div>\r\n            </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass ResultsTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { places: [] , filteredData: [] };\r\n\r\n        this.createPlace = this.createPlace.bind(this);\r\n        this.setFilter = this.setFilter.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps === this.props) {\r\n            return;\r\n        }\r\n        this.loadData();\r\n    }\r\n\r\n    loadData() {\r\n        fetch(`/api/results`).then(response => {\r\n            if (response.ok) {\r\n                response.json().then(data => {\r\n                    console.log(\"Total count of records:\", data._metadata.total_count);\r\n                    this.setState({ places: data.records });\r\n                });\r\n            } else {\r\n                response.json().then(error => {\r\n                    alert(\"Failed to fetch places:\" + error.message)\r\n                });\r\n            }\r\n        }).catch(err => {\r\n            alert(\"Error in fetching data from server:\", err);\r\n        });\r\n    }\r\n\r\n    createPlace(newPlace) {\r\n        fetch('/api/results', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(newPlace),\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    res.json().then(updatedPlace => {\r\n                        const newPlaces = this.state.places.concat(updatedPlace);\r\n                        this.setState({ places: newPlaces, filteredData: this.state.filteredData });\r\n                    });\r\n                }\r\n                else {\r\n                    res.json()\r\n                        .then(error => {\r\n                            alert('Failed to add issue: ' + error.message);\r\n                        });\r\n                }\r\n            });\r\n    }\r\n\r\n    setFilter(query) {\r\n        this.props.router.push({ pathname: this.props.location.pathname, query });\r\n    }\r\n\r\n    render() {\r\n        let priceVar = this.props.priceVar;\r\n        let distanceVar = parseInt(this.props.distVar);\r\n        let numberOfPeopleVar = parseInt(this.props.peopleVar);\r\n        let activityLvlVar = this.props.activityVar;\r\n        this.state.filteredData = this.state.places.filter(function (location) {\r\n            return location.price <= priceVar && location.distance <= distanceVar && location.numberOfPeople <= numberOfPeopleVar && location.activityLvl <= activityLvlVar;\r\n        });\r\n        let rows = this.state.filteredData.map(location => {\r\n            return <LocationRow key={\r\n                location.name\r\n            } places={\r\n                location\r\n            }\r\n            />\r\n        })\r\n        const borderedStyle = { border: \"1px Solid Silver\", padding: 6 };\r\n        return (\r\n            <div>\r\n                <div id=\"newPlace\">\r\n                    <AddPlace createPlace={this.createPlace} />\r\n                </div>\r\n                <table>\r\n                    <thead>\r\n                    <tr style={borderedStyle}>\r\n                        <th>Location</th>\r\n                        <th>Price</th>\r\n                        <th>Distance</th>\r\n                        <th>Number of People</th>\r\n                        <th>Activity Level</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {rows}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nlet LocationRow = (props) => {\r\n    return (\r\n        <tr>\r\n            <td>\r\n                {props.places.name}\r\n            </td>\r\n            <td>\r\n                {priceEval(props.places.price)}\r\n            </td>\r\n            <td>\r\n                {distEval(props.places.distance)}\r\n            </td>\r\n            <td>\r\n                {peopleEval(props.places.numberOfPeople)}\r\n            </td>\r\n            <td>\r\n                {activityEval(props.places.activityLvl)}\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nclass Filters extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"filters\">\r\n                <p>Distance<br />\r\n                    <div className=\"slideContainer\">\r\n                        <input type=\"range\" className=\"slider\" id=\"distanceSlider\" min=\"0\" max=\"25\" step=\"5\" defaultValue=\"25\" onChange={() => this.props.changeDist(document.getElementById(\"distanceSlider\").value)} />\r\n                    </div>\r\n                    <div id=\"distanceValue\">{distEval(this.props.dist)}</div>\r\n                </p>\r\n\r\n                <p>Price Range<br />\r\n                    <div className=\"slideContainer\">\r\n                        <input type=\"range\" className=\"slider\" id=\"priceSlider\" min=\"1\" max=\"3\" step=\"1\" defaultValue=\"3\" onChange={() => this.props.changePrice(document.getElementById(\"priceSlider\").value)}></input>\r\n                    </div>\r\n                    <div id=\"priceValue\">{priceEval(this.props.price)}</div>\r\n                </p>\r\n\r\n                <p>Number of People<br />\r\n                    <div className=\"slideContainer\">\r\n                        <input type=\"range\" className=\"slider\" id=\"peopleSlider\" min=\"1\" max=\"11\" step=\"1\" defaultValue=\"11\" onChange={() => this.props.changePeople(document.getElementById(\"peopleSlider\").value)} />\r\n                    </div>\r\n                    <div id=\"peopleValue\">{peopleEval(this.props.people)}</div>\r\n                </p>\r\n\r\n                <p>Activity Level<br />\r\n                    <div className=\"slideContainer\">\r\n                        <input type=\"range\" className=\"slider\" id=\"activitySlider\" min=\"1\" max=\"3\" step=\"1\" defaultValue=\"3\" onChange={() => this.props.changeActivity(document.getElementById(\"activitySlider\").value)} />\r\n                    </div>\r\n                    <div id=\"activityValue\">{activityEval(this.props.activity)}</div>\r\n                </p>\r\n\r\n                <p>Over 21?<br />\r\n                    <div className=\"checkContainer\">\r\n                        <input type=\"checkbox\" id=\"ageCheck\"></input>\r\n                    </div>\r\n                </p>\r\n                <script>\r\n\r\n                </script>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass AddPlace extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        let form = document.forms.placeAdd;\r\n        this.props.createPlace({\r\n            name: form.name.value,\r\n            price: form.price.value,\r\n            distance: form.distance.value,\r\n            numberOfPeople: form.numberOfPeople.value,\r\n            activityLvl: form.activityLvl.value,\r\n        });\r\n        // Clear the form for the next input.\r\n        form.name.value = '';\r\n        form.price.value = '';\r\n        form.distance.value = '';\r\n        form.numberOfPeople.value = '';\r\n        form.activityLvl.value = '';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form name=\"placeAdd\" onSubmit={this.handleSubmit}>\r\n                    <input type=\"text\" name=\"name\" placeholder=\"Name\" />\r\n                    <input type=\"text\" name=\"price\" placeholder=\"Price\" />\r\n                    <input type=\"text\" name=\"distance\" placeholder=\"Distance\" />\r\n                    <input type=\"text\" name=\"numberOfPeople\" placeholder=\"Number of People\" />\r\n                    <input type=\"text\" name=\"activityLvl\" placeholder=\"Activity Level\" />\r\n                    <button>Add</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction priceEval(price) {\r\n    if (price == 1)\r\n        return \"$\";\r\n    else if (price == 2)\r\n        return \"$$\";\r\n    else\r\n        return \"$$$\";\r\n}\r\n\r\nfunction distEval(distance) {\r\n    if (distance == 0)\r\n        return \"On Campus\";\r\n    else\r\n        return distance + \" miles\";\r\n}\r\n\r\nfunction peopleEval(people) {\r\n    if (people >= 11)\r\n        return \"Any\";\r\n    if (people == 1)\r\n        return people;\r\n    else\r\n        return people + \" or fewer\"\r\n}\r\n\r\nfunction activityEval(activity) {\r\n    if (activity == 1)\r\n        return \"Low\";\r\n    else if (activity == 2)\r\n        return \"Medium\";\r\n    else\r\n        return \"High\";\r\n\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/results.jsx"],"sourceRoot":""}